"""initial migration

Revision ID: 079424387cf9
Revises: 
Create Date: 2023-10-24 17:50:43.432908

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '079424387cf9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_index('ix_movementworkoutjunction_movement_id', table_name='movementworkoutjunction')
    op.drop_index('ix_movementworkoutjunction_workout_id', table_name='movementworkoutjunction')
    op.drop_table('movementworkoutjunction')
    op.drop_index('ix_workout_date', table_name='workout')
    op.drop_table('workout')
    op.drop_index('ix_category_title', table_name='category')
    op.drop_table('category')
    op.drop_index('ix_movement_name', table_name='movement')
    op.drop_table('movement')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('movement',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('movement_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('video', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='movement_pkey'),
    sa.UniqueConstraint('name', name='unique_name_constraint'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_movement_name', 'movement', ['name'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('banner', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='category_pkey'),
    sa.UniqueConstraint('title', name='unique_title_constraint'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_category_title', 'category', ['title'], unique=False)
    op.create_table('workout',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('workout_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name='workout_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='workout_pkey'),
    sa.UniqueConstraint('date', name='unique_date_constraint'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_workout_date', 'workout', ['date'], unique=False)
    op.create_table('movementworkoutjunction',
    sa.Column('position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('movement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('workout_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('complete', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('sets', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reps', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rest_in_seconds', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['movement_id'], ['movement.id'], name='movementworkoutjunction_movement_id_fkey'),
    sa.ForeignKeyConstraint(['workout_id'], ['workout.id'], name='movementworkoutjunction_workout_id_fkey'),
    sa.PrimaryKeyConstraint('movement_id', 'workout_id', name='movementworkoutjunction_pkey')
    )
    op.create_index('ix_movementworkoutjunction_workout_id', 'movementworkoutjunction', ['workout_id'], unique=False)
    op.create_index('ix_movementworkoutjunction_movement_id', 'movementworkoutjunction', ['movement_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='unique_username_constraint')
    )
    # ### end Alembic commands ###
